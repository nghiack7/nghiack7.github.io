name: Deploy CV Website

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm init -y
        npm install --save-dev html-validate stylelint stylelint-config-standard prettier lighthouse-ci @lhci/cli
        
    - name: Create validation config files
      run: |
        # HTML Validation Config
        cat > .htmlvalidate.json << 'EOF'
        {
          "extends": ["html-validate:recommended"],
          "rules": {
            "no-inline-style": "off",
            "attribute-boolean-style": "off"
          }
        }
        EOF
        
        # CSS Linting Config  
        cat > .stylelintrc.json << 'EOF'
        {
          "extends": ["stylelint-config-standard"],
          "rules": {
            "selector-class-pattern": null,
            "property-no-vendor-prefix": null,
            "at-rule-no-vendor-prefix": null
          }
        }
        EOF
        
        # Prettier Config
        cat > .prettierrc << 'EOF'
        {
          "semi": true,
          "trailingComma": "es5",
          "singleQuote": true,
          "printWidth": 80,
          "tabWidth": 2
        }
        EOF
        
        # Lighthouse CI Config
        cat > lighthouserc.js << 'EOF'
        module.exports = {
          ci: {
            collect: {
              staticDistDir: '.',
              url: ['http://localhost/index.html']
            },
            assert: {
              assertions: {
                'categories:performance': ['warn', {minScore: 0.8}],
                'categories:accessibility': ['error', {minScore: 0.9}],
                'categories:best-practices': ['warn', {minScore: 0.8}],
                'categories:seo': ['warn', {minScore: 0.8}]
              }
            }
          }
        };
        EOF
    
    - name: Validate HTML
      run: |
        npx html-validate index.html || echo "HTML validation completed with warnings"
        
    - name: Lint CSS
      run: |
        find . -name "*.css" -not -path "./node_modules/*" | xargs npx stylelint --fix || echo "CSS linting completed with warnings"
        
    - name: Format code
      run: |
        npx prettier --write "*.html" "*.css" "*.js" || echo "Code formatting completed"
        
    - name: Security scan
      run: |
        # Basic security checks
        echo "Running security scans..."
        grep -r "eval\|innerHTML\|document.write" . --exclude-dir=node_modules || echo "No obvious security issues found"
        
    - name: Performance test with Lighthouse
      run: |
        # Start simple HTTP server for testing
        python3 -m http.server 8080 &
        sleep 5
        # Run lighthouse CI
        npx lhci autorun --config=lighthouserc.js || echo "Performance test completed with warnings"
        
    - name: Generate build info
      run: |
        echo "Build Date: $(date)" > build-info.txt
        echo "Commit SHA: ${{ github.sha }}" >> build-info.txt
        echo "Branch: ${{ github.ref_name }}" >> build-info.txt
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: website-build
        path: |
          index.html
          assets/
          build-info.txt
        retention-days: 30

  # Deploy Job
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: website-build
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      
    - name: Deployment notification
      run: |
        echo "‚úÖ Website deployed successfully!"
        echo "üåê URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üìÖ Deployed at: $(date)"

  # Backup Job (runs weekly)
  backup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create backup
      run: |
        tar -czf "cv-backup-$(date +%Y%m%d).tar.gz" \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='*.tar.gz' \
          .
          
    - name: Upload backup
      uses: actions/upload-artifact@v3
      with:
        name: cv-backup-${{ github.run_number }}
        path: "*.tar.gz"
        retention-days: 90
